@using System.Collections.Immutable
@using System.Globalization
@using Olimp.Data
@model Olimp?
@{
    ViewData["Title"] = "Olimp";
    var participants = Model?.Steps
        .SelectMany(step => step.Results)
        .GroupBy(result => result.Participant)
        .ToImmutableList();

    var maleParticipants = participants?.Where(results => results.Key.Gender)
                           ?? Array.Empty<IGrouping<Participant, Result>>();
    
    var femaleParticipants = participants?.Where(results => !results.Key.Gender)
                           ?? Array.Empty<IGrouping<Participant, Result>>();

    var maleResultsCollection = new ParticipantResultsCollection(maleParticipants);
    var femaleResultsCollection = new ParticipantResultsCollection(femaleParticipants);
}

<div class="text-center">
    @if (Model is null)
    {
        <h4>Олимпиады еще не проводились</h4>
    }

    @if (Model is not null)
    {
        <h1 class="display-4">@Model.Name</h1>
        <h6 class="display-6">@Model.Description</h6>
        <img src="@Model.Map" class="olympics-map" alt="Карта олимпиады"/>
        <div class="results-container">
            <table class="styled-table">
                <thead>
                <tr>
                    <th>ПОО</th>
                    <th>Участник</th>
                    @foreach (var step in Model.Steps)
                    {
                        <th>@step.Name</th>
                    }
                    <th>Результат</th>
                </tr>
                </thead>
                <tr>
                    <th colspan="@(Model.Steps.Count + 3)">Юноши</th>
                </tr>
                @foreach (var participant in maleResultsCollection)
                {
                    <tr>
                        <th>
                            <img class="sharaga-logo" src="@participant.Logo"/>
                        </th>
                        <th>
                            @participant.Number (@participant.ShortName)
                        </th>
                        @foreach (var step in Model.Steps)
                        {
                            <th>
                                @{
                                    var result = participant.Results.TryGetValue(step, out var value) 
                                        ? value.ToString(CultureInfo.InvariantCulture) 
                                        : string.Empty;
                                }
                                @result
                            </th>
                        }
                        <th>
                            @participant.Points.ToString("0.0", CultureInfo.InvariantCulture)
                        </th>
                    </tr>
                }
                <tr>
                    <th colspan="@(Model.Steps.Count + 3)">Девушки</th>
                </tr>
                @foreach (var participant in femaleResultsCollection)
                {
                <tr>
                    <th>
                        <img class="sharaga-logo" src="@participant.Logo"/>
                    </th>
                    <th>
                        @participant.Number (@participant.ShortName)
                    </th>
                    @foreach (var step in Model.Steps)
                    {
                    <th>
                        @{
                        var result = participant.Results.TryGetValue(step, out var value)
                        ? value.ToString(CultureInfo.InvariantCulture)
                        : string.Empty;
                        }
                        @result
                    </th>
                    }
                    <th>
                        @participant.Points.ToString("0.0", CultureInfo.InvariantCulture)
                    </th>
                </tr>
                }
            </table>
        </div>
    }
</div>