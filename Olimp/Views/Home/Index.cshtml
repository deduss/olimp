@using System.Globalization
@model Olimp.Data.Olimp?
@{
    ViewData["Title"] = "Olimp";
    var participants = Model?.Steps
        .SelectMany(step => step.Results)
        .GroupBy(result => result.Participant)
        .OrderBy(results => results.Key.Number);
}

<div class="text-center">
    @if (Model is null)
    {
        <h4>Олимпиады еще не проводились</h4>
    }

    @if (Model is not null)
    {
        <h1 class="display-4">@Model.Name</h1>
        <h6 class="display-6">@Model.Description</h6>
        <img src="@Model.Map" class="olympics-map" alt="Карта олимпиады"/>
        <div class="results-container">
            <table class="styled-table">
                <thead>
                <tr>
                    <th>ПОО</th>
                    <th>Участник</th>
                    @foreach (var step in Model.Steps)
                    {
                        <th>@step.Name</th>
                    }
                </tr>
                </thead>
                @foreach (var participant in participants!)
                {
                    <tr>
                        <th>
                            <img class="sharaga-logo" src="@participant.Key.EduOrg.Logo"/>
                        </th>
                        <th>
                            @participant.Key.Number (@participant.Key.EduOrg.ShortName)
                        </th>
                        @foreach (var step in Model.Steps)
                        {
                            <th>
                                @{
                                    var result = participant.FirstOrDefault(r => r.Step == step)
                                                     ?.Score.ToString(CultureInfo.InvariantCulture)
                                                 ?? string.Empty;
                                }
                                @result
                            </th>
                        }
                    </tr>
                }
            </table>
        </div>
    }
</div>